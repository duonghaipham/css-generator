{"version":3,"sources":["components/Navbar.js","components/Home.js","components/color.js","components/BoxShadow.js","components/TextShadow.js","components/Gradient.js","components/Cursor.js","components/BorderRadius.js","components/Transform.js","components/ColorConverter.js","components/MultipleColumns.js","img/landscape.jpg","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","classObject","parent","activeClassName","to","children","Home","hexToRgb","hex","result","exec","r","parseInt","g","b","rgbToHex","toString","slice","BoxShadow","useState","horizontalLength","setHorizontalLength","verticalLength","setVerticalLength","blurRadius","setBlurRadius","spreadRadius","setSpreadRadius","color","setColor","colorOpacity","setColorOpacity","inset","setInset","copied","setCopied","colorText","useRef","outputText","value","type","min","max","defaultValue","onChange","event","target","ref","rgb","match","length","current","step","checked","style","boxShadow","onClick","navigator","clipboard","writeText","innerText","TextShadow","textShadow","Gradient","orientation","setOrientation","degree","setDegree","col","per","colors","setColors","size","setSize","position","setPosition","colorsText","percentagesText","useEffect","includes","replace","forEach","createValue","map","currentSize","index","newColors","splice","handleRemoveColorClick","element","handleColorTextChange","handleColorChooserChange","handleColorPercentageChange","background","Cursor","cursor","setCursor","cursorRange","item","onMouseEnter","handleItemHover","BorderRadius","allCornersRadius","setAllCornersRadius","topLeftRadius","setTopLeftRadius","topRightRadius","setTopRightRadius","bottomRightRadius","setBottomRightRadius","bottomLeftRadius","setBottomLeftRadius","borderWidth","setBorderWidth","borderColor","setBorderColor","borderStyle","setBorderStyle","backgroundColor","setBackgroundColor","includeBackground","setIncludeBackground","borderColorText","backgroundColorText","borderRadiusValue","borderValue","backgroundValue","borderRadius","border","outputArr","push","createOutputArr","Transform","rotate","setRotate","scale","setScale","skew","setSkew","translateX","setTranslateX","translateY","setTranslateY","w","transform","ColorConverter","red","setRed","green","setGreen","blue","setBlue","opacity","setOpacity","hexInput","rgba","handleCopy","setTimeout","hexValue","MultipleColumns","count","setCount","gap","setGap","ruleStyle","setRuleStyle","ruleWidth","setRuleWidth","ruleColor","setRuleColor","ruleColorText","columnRuleValue","columnCount","columnGap","columnRule","Filter","grayscale","setGrayscale","sepia","setSepia","blur","setBlur","brightness","setBrightness","hueRotate","setHueRotate","saturate","setSaturate","contrast","setContrast","invert","setInvert","dropShadow","setDropShadow","shadowColor","setShadowColor","src","landscape","width","alt","filter","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f2ec374.chunk.js","sourcesContent":["import {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <main className={props.classObject.parent}>\r\n      <NavLink activeClassName='active-menu' to='/box-shadow' className={props.classObject.children}>Box Shadow</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/text-shadow' className={props.classObject.children}>Text Shadow</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/gradient' className={props.classObject.children}>Gradient</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/cursor' className={props.classObject.children}>CSS Cursor</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/border-radius' className={props.classObject.children}>Border Radius</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/transform' className={props.classObject.children}>Transform</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/color-converter' className={props.classObject.children}>RGBA & Hex Color</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/filter' className={props.classObject.children}>Filter</NavLink>\r\n      <NavLink activeClassName='active-menu' to='/multiple-columns' className={props.classObject.children}>Multiple Columns</NavLink>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import Navbar from './Navbar';\r\nimport '../styles/home.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Navbar classObject={{parent: 'list-options', children: 'option'}} />\r\n  );\r\n};\r\n\r\nexport default Home;","export const hexToRgb = (hex) => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  };\r\n};\r\n\r\nexport const rgbToHex = (r, g, b) => '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);","import {useRef, useState} from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {rgbToHex, hexToRgb} from './color';\r\nimport '../styles/general.scss';\r\n\r\n\r\nconst BoxShadow = () => {\r\n  const [horizontalLength, setHorizontalLength] = useState(10);\r\n  const [verticalLength, setVerticalLength] = useState(10);\r\n  const [blurRadius, setBlurRadius] = useState(5);\r\n  const [spreadRadius, setSpreadRadius] = useState(0);\r\n  const [color, setColor] = useState({r: 0, g: 0, b: 0});\r\n  const [colorOpacity, setColorOpacity] = useState(0.5);\r\n  const [inset, setInset] = useState('');\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const colorText = useRef();\r\n  const outputText = useRef();\r\n\r\n  const handleHorizontalLengthChange = event => {\r\n    setHorizontalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleVerticalLengthChange = event => {\r\n    setVerticalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBlurRadiusChange = event => {\r\n    setBlurRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleSpreadRadiusChange = event => {\r\n    setSpreadRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorOpacityChange = event => {\r\n    setColorOpacity(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setColor(rgb);\r\n    setCopied(false);\r\n    colorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleInsetChange = event => {\r\n    if (event.target.checked)\r\n      setInset(' inset');\r\n    else\r\n      setInset('');\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  const value = `${horizontalLength}px ${verticalLength}px ${blurRadius}px ${spreadRadius}px rgba(${color.r}, ${color.g}, ${color.b}, ${colorOpacity})${inset}`;\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Box shadow options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Horizontal shadow length</label>\r\n                <span className='value'>{horizontalLength}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='10' className='range-slider' onChange={handleHorizontalLengthChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Vertical shadow length</label>\r\n                <span className='value'>{verticalLength}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='10' className='range-slider' onChange={handleVerticalLengthChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Blur radius</label>\r\n                <span className='value'>{blurRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='400' defaultValue='5' className='range-slider' onChange={handleBlurRadiusChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Spread radius</label>\r\n                <span className='value'>{spreadRadius}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='0' className='range-slider' onChange={handleSpreadRadiusChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Shadow color</label>\r\n              </div>\r\n              <div className='color-picker'>\r\n                <input type='text' className='color-text' ref={colorText} defaultValue='rgb(0, 0, 0)' onChange={handleColorTextChange} />\r\n                <input type='color' className='color-chooser' value={rgbToHex(color.r, color.g, color.b)} onChange={handleColorChooserChange} />\r\n              </div>\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Shadow color opacity</label>\r\n                <span className='value'>{colorOpacity}</span>\r\n              </div>\r\n              <input type='range' min='0' max='1' step='0.01' defaultValue='0.5' className='range-slider' onChange={handleColorOpacityChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Inset</label>\r\n              </div>\r\n              <label className='switch-slider'>\r\n                <input type='checkbox' onChange={handleInsetChange} className='checkbox'/>\r\n                <span className='slider' />\r\n              </label>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <div className='test-box test-box-1' style={{ boxShadow: value }} />\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n              box-shadow: ${value};<br />\r\n              -webkit-box-shadow: ${value};<br />\r\n              -moz-box-shadow: ${value};<br />\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BoxShadow;","import {useRef, useState} from 'react';\r\nimport Navbar from './Navbar';\r\nimport {hexToRgb, rgbToHex} from './color';\r\nimport '../styles/general.scss';\r\n\r\nconst TextShadow = () => {\r\n  const [horizontalLength, setHorizontalLength] = useState(4);\r\n  const [verticalLength, setVerticalLength] = useState(4);\r\n  const [blurRadius, setBlurRadius] = useState(2);\r\n  const [color, setColor] = useState({r: 0, g: 0, b: 0});\r\n  const [colorOpacity, setColorOpacity] = useState(0.6);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const colorText = useRef();\r\n  const outputText = useRef();\r\n\r\n  const handleHorizontalLengthChange = event => {\r\n    setHorizontalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleVerticalLengthChange = event => {\r\n    setVerticalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBlurRadiusChange = event => {\r\n    setBlurRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorOpacityChange = event => {\r\n    setColorOpacity(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setColor(rgb);\r\n    setCopied(false);\r\n    colorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  const value = `${horizontalLength}px ${verticalLength}px ${blurRadius}px rgba(${color.r}, ${color.g}, ${color.b}, ${colorOpacity})`;\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Text shadow options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Horizontal shadow length</label>\r\n                <span className='value'>{horizontalLength}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='4' className='range-slider' onChange={handleHorizontalLengthChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Vertical shadow length</label>\r\n                <span className='value'>{verticalLength}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='4' className='range-slider' onChange={handleVerticalLengthChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Blur radius</label>\r\n                <span className='value'>{blurRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='50' defaultValue='2' className='range-slider' onChange={handleBlurRadiusChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Shadow color</label>\r\n              </div>\r\n              <div className='color-picker'>\r\n                <input type='text' className='color-text' ref={colorText} defaultValue='rgb(0, 0, 0)' onChange={handleColorTextChange} />\r\n                <input type='color' className='color-chooser' value={rgbToHex(color.r, color.g, color.b)} onChange={handleColorChooserChange} />\r\n              </div>\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Shadow color opacity</label>\r\n                <span className='value'>{colorOpacity}</span>\r\n              </div>\r\n              <input type='range' min='0' max='1' step='0.01' defaultValue='0.5' className='range-slider' onChange={handleColorOpacityChange} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <p className='test-text' style={{ textShadow: value }}>The quick brown fox jumps over the lazy dog</p>\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>text-shadow: {value};</p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextShadow;","import {useEffect, useRef, useState} from 'react';\r\nimport Navbar from './Navbar';\r\nimport '../styles/general.scss';\r\n\r\nconst Gradient = () => {\r\n  const [orientation, setOrientation] = useState('linear');\r\n  const [degree, setDegree] = useState('0');\r\n  const [colors, setColors] = useState([{col: '#ff0000', per: 0}, {col: '#00ff00', per: 80}]);\r\n  const [size, setSize] = useState('farthest-corner');\r\n  const [position, setPosition] = useState('center center');\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const colorsText = useRef([]);\r\n  const percentagesText = useRef([]);\r\n  const outputText = useRef();\r\n\r\n  const listOrientations = ['linear', 'radial', 'elliptical', 'repeating linear', 'repeating radial', 'repeating elliptical'];\r\n  const listSizes = ['farthest-corner', 'farthest-side'];\r\n  const listPositions = ['top left', 'top center', 'top right', 'left center', 'center center', 'right center', 'bottom left', 'bottom center', 'bottom right'];\r\n\r\n  const handleOrientationChange = event => {\r\n    setOrientation(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleDegreeChange = event => {\r\n    setDegree(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleSizeChange = event => {\r\n    setSize(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handlePositionChange = event => {\r\n    setPosition(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorTextChange = (event, index) => {\r\n    const hex = event.target.value;\r\n    if (hex.length === 7 && hex[0] === '#') {\r\n      const newColors = [...colors];\r\n      newColors[index] = {col: hex, per: newColors[index].per };\r\n      setColors(newColors);\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleColorChooserChange = (event, index) => {\r\n    const hex = event.target.value;\r\n    const newColors = [...colors];\r\n    newColors[index] = {col: hex, per: colors[index].per};\r\n    setColors(newColors);\r\n    colorsText.current[index].value = hex;\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorPercentageChange = (event, index) => {\r\n    const newColors = [...colors];\r\n    newColors[index] = {col: newColors[index].col, per: event.target.value};\r\n    setColors(newColors);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleRemoveColorClick = index => {\r\n    const newColors = [...colors];\r\n    newColors.splice(index, 1);\r\n    setColors(newColors);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleAddColorClick = () => {\r\n    const newColors = [...colors];\r\n    newColors.splice(colors.length - 1, 0, {col: '#ffff00', per: 40});\r\n    setColors(newColors);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const color = colors[colors.length - 2];\r\n    colorsText.current[colors.length - 2].value = color.col;\r\n    percentagesText.current[colors.length - 2].value = color.per;\r\n  }, [colors])\r\n\r\n  const createValue = () => {\r\n    let value = ''\r\n    if (orientation.includes('linear'))\r\n      value = `${orientation.replace(' ', '-')}-gradient(${degree}deg`;\r\n    else {\r\n      value = `${orientation.replace(' ', '-').replace('elliptical', 'radial')}-gradient(`;\r\n      value += (orientation === 'radial') ? 'circle' : 'ellipse';\r\n      value += ` ${size} at ${position}`;\r\n    }\r\n    colors.forEach((color) => {\r\n      value += `, ${color.col} ${color.per}%`;\r\n    });\r\n    value += ')';\r\n    return value;\r\n  }\r\n\r\n  const value = createValue();\r\n  \r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Text shadow options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Orientation</label>\r\n              </div>\r\n              <select className='combobox' onChange={handleOrientationChange}>\r\n                {listOrientations.map(orientation => <option>{orientation}</option>)}\r\n              </select>\r\n            </li>\r\n            {(orientation.includes('linear')) ?\r\n              <li className='custom-item'>\r\n                <div className='meta'>\r\n                  <label>Degree</label>\r\n                  <span className='value'>{degree}&deg;</span>\r\n                </div>\r\n                <input type='range' min='0' max='360' defaultValue='0' className='range-slider' onChange={handleDegreeChange} />\r\n              </li>\r\n              :\r\n              <>\r\n                <li className='custom-item item-inline'>\r\n                  <div className='meta'>\r\n                    <label>Size</label>\r\n                  </div>\r\n                  <select className='combobox' onChange={handleSizeChange}>\r\n                    {listSizes.map(currentSize => <option>{currentSize}</option>)}\r\n                  </select>\r\n                </li>\r\n                <li className='custom-item item-inline'>\r\n                  <div className='meta'>\r\n                    <label>Position</label>\r\n                  </div>\r\n                  <select className='combobox' defaultValue='center center' onChange={handlePositionChange}>\r\n                    {listPositions.map(position => <option>{position}</option>)}\r\n                  </select>\r\n                </li>\r\n              </>}\r\n            {colors.map((color, index) =>\r\n                <li className='custom-item item-inline'>\r\n                  <div className='meta'>\r\n                    <label>{(index === 0) ? 'Start color' : (index === colors.length - 1) ? 'End color' : 'Stop color'}</label>\r\n                    {(index !== 0 && index !== colors.length - 1) ? <span className='remove' onClick={() => handleRemoveColorClick(index)}>&#10006;</span> : ''}\r\n                  </div>\r\n                  <div className='color-value'>\r\n                    <div className='color-picker'>\r\n                      <input type='text' className='color-text' ref={element => colorsText.current[index] = element}\r\n                             defaultValue={color.col} onChange={event => handleColorTextChange(event, index)} />\r\n                      <input type='color' className='color-chooser' value={color.col}\r\n                             onChange={event => handleColorChooserChange(event, index)} />\r\n                    </div>\r\n                    <input type='text' className='color-percentage' ref={element => percentagesText.current[index] = element}\r\n                           defaultValue={color.per} onChange={event => handleColorPercentageChange(event, index)} />\r\n                  </div>\r\n                </li>\r\n            )}\r\n            <li className='custom-item item-inline'>\r\n              <button type='button' onClick={handleAddColorClick}>Add stop color</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <div className='test-box-1' style={{ background: value }} />\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n              background: {colors[0].col};<br />\r\n              background: {value};<br />\r\n              background: -webkit-{value};<br />\r\n              background: -moz-{value};<br />\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gradient;","import {useRef, useState} from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport '../styles/general.scss';\r\n\r\nconst Cursor = () => {\r\n  const [cursor, setCursor] = useState('default');\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const cursorRange = useRef();\r\n  const outputText = useRef();\r\n\r\n  const listItems = ['alias', 'all-scroll', 'auto', 'cell', 'context-menu', 'col-resize', 'copy', 'crosshair', 'default', 'e-resize', 'ew-resize', 'grab', 'grabbing', 'help', 'move', 'n-resize', 'ne-resize', 'nesw-resize', 'ns-resize', 'nw-resize', 'nwse-resize', 'no-drop', 'none', 'not-allowed', 'pointer', 'progress', 'row-resize', 's-resize', 'se-resize', 'sw-resize', 'text', 'vertical-text', 'w-resize', 'wait', 'zoom-in', 'zoom-out', 'initial'];\r\n\r\n  const handleItemHover = (event, item) => {\r\n    event.target.style.cursor = item;\r\n    cursorRange.current.style.cursor = item;\r\n    setCursor(item);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container' ref={cursorRange}>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Cursor options (PC recommended)</h3>\r\n          <ul className='custom-list'>\r\n            {listItems.map((item) => <li className='custom-item cursor' onMouseEnter={event => handleItemHover(event,item)}>{item}</li>)}\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>cursor: {cursor};</p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cursor;","import {useRef, useState} from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {hexToRgb, rgbToHex} from './color';\r\nimport '../styles/general.scss';\r\n\r\nconst BorderRadius = () => {\r\n  const [allCornersRadius, setAllCornersRadius] = useState('10');\r\n  const [topLeftRadius, setTopLeftRadius] = useState('10');\r\n  const [topRightRadius, setTopRightRadius] = useState('10');\r\n  const [bottomRightRadius, setBottomRightRadius] = useState('10');\r\n  const [bottomLeftRadius, setBottomLeftRadius] = useState('10');\r\n  const [borderWidth, setBorderWidth] = useState('0');\r\n  const [borderColor, setBorderColor] = useState({r: 125, g: 0, b: 125});\r\n  const [borderStyle, setBorderStyle] = useState('solid');\r\n  const [backgroundColor, setBackgroundColor] = useState({r: 45, g: 195, b: 106});\r\n  const [includeBackground, setIncludeBackground] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const borderColorText = useRef();\r\n  const backgroundColorText = useRef();\r\n  const outputText = useRef();\r\n\r\n  const listStyles = ['solid', 'dotted', 'dashed', 'double', 'groove', 'ridge', 'inset', 'outset', 'none', 'hidden'];\r\n\r\n  const handleAllCornersChange = event => {\r\n    setAllCornersRadius(event.target.value);\r\n    setTopLeftRadius(event.target.value);\r\n    setTopRightRadius(event.target.value);\r\n    setBottomRightRadius(event.target.value);\r\n    setBottomLeftRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleTopLeftRadiusChange = event => {\r\n    setTopLeftRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleTopRightRadiusChange = event => {\r\n    setTopRightRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBottomRightRadiusChange = event => {\r\n    setBottomRightRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBottomLeftRadiusChange = event => {\r\n    setBottomLeftRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBorderWidthChange = event => {\r\n    setBorderWidth(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBorderColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setBorderColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleBorderColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setBorderColor(rgb);\r\n    setCopied(false);\r\n    borderColorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleBorderStyleChange = event => {\r\n    setBorderStyle(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBackgroundColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setBackgroundColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleBackgroundColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setBackgroundColor(rgb);\r\n    setCopied(false);\r\n    backgroundColorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleIncludeBackgroundChange = event => {\r\n    setIncludeBackground(event.target.checked);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = event => {\r\n    navigator.clipboard.writeText(outputText.current);\r\n    setCopied(true);\r\n  }\r\n\r\n  const borderRadiusValue = `${topLeftRadius}px ${topRightRadius}px ${bottomRightRadius}px ${bottomLeftRadius}px`;\r\n  const borderValue = `${borderWidth}px ${borderStyle} ${rgbToHex(borderColor.r, borderColor.g, borderColor.b)}`;\r\n  const backgroundValue = `${rgbToHex(backgroundColor.r, backgroundColor.g, backgroundColor.b)}`;\r\n\r\n  const createOutputArr = () => {\r\n    const outputArr = [];\r\n    outputArr.push(`border-radius: ${borderRadiusValue};`, <br/>);\r\n    outputArr.push(`-webkit-border-radius: ${borderRadiusValue};`, <br />);\r\n    outputArr.push(`-moz-border-radius: ${borderRadiusValue};`, <br />);\r\n    if (borderWidth > 0)\r\n      outputArr.push(`border: ${borderValue};`, <br />);\r\n    if (includeBackground)\r\n      outputArr.push(`background: ${backgroundValue};`);\r\n    return outputArr;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className=\"function-container\">\r\n        <div className=\"custom-container\">\r\n          <h3 className=\"header\">Border radius options</h3>\r\n          <ul className=\"custom-list\">\r\n            <li className=\"custom-item\">\r\n              <div className=\"meta\">\r\n                <label>All corners radius</label>\r\n                <span className=\"value\">{allCornersRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' defaultValue='10' className='range-slider' onChange={handleAllCornersChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Top-left radius</label>\r\n                <span className='value'>{topLeftRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' value={topLeftRadius} className='range-slider' onChange={handleTopLeftRadiusChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Top right radius</label>\r\n                <span className='value'>{topRightRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' value={topRightRadius} className='range-slider' onChange={handleTopRightRadiusChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Bottom right radius</label>\r\n                <span className='value'>{bottomRightRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' value={bottomRightRadius} className='range-slider' onChange={handleBottomRightRadiusChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Bottom left radius</label>\r\n                <span className='value'>{bottomLeftRadius}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' value={bottomLeftRadius} className='range-slider' onChange={handleBottomLeftRadiusChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Border width</label>\r\n                <span className='value'>{borderWidth}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' defaultValue='0' className='range-slider' onChange={handleBorderWidthChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Border color</label>\r\n              </div>\r\n              <div className='color-picker'>\r\n                <input type='text' className='color-text' ref={borderColorText} defaultValue='rgb(125, 0, 125)' onChange={handleBorderColorTextChange} />\r\n                <input type='color' className='color-chooser' value={rgbToHex(borderColor.r, borderColor.g, borderColor.b)} onChange={handleBorderColorChooserChange} />\r\n              </div>\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Border style</label>\r\n              </div>\r\n              <select className='combobox' onChange={handleBorderStyleChange}>\r\n                {listStyles.map(style => <option>{style}</option>)}\r\n              </select>\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Background color</label>\r\n              </div>\r\n              <div className='color-picker'>\r\n                <input type='text' className='color-text' ref={backgroundColorText} defaultValue='rgb(45, 195, 106)' onChange={handleBackgroundColorTextChange} />\r\n                <input type='color' className='color-chooser' value={rgbToHex(backgroundColor.r, backgroundColor.g, backgroundColor.b)} onChange={handleBackgroundColorChooserChange} />\r\n              </div>\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Include background</label>\r\n              </div>\r\n              <label className='switch-slider'>\r\n                <input type='checkbox' onChange={handleIncludeBackgroundChange} className='checkbox'/>\r\n                <span className='slider' />\r\n              </label>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <div className='test-box test-box-2' style={{ borderRadius: borderRadiusValue, border: borderValue, background: backgroundValue }} />\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n              {createOutputArr().map(item => item)}\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BorderRadius;","import Navbar from './Navbar';\r\nimport {useRef, useState} from 'react';\r\nimport '../styles/general.scss';\r\n\r\nconst Transform = () => {\r\n  const [rotate, setRotate] = useState('0');\r\n  const [scale, setScale] = useState('1');\r\n  const [skew, setSkew] = useState('0');\r\n  const [translateX, setTranslateX] = useState('0');\r\n  const [translateY, setTranslateY] = useState('0');\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const w = useRef('');\r\n  const outputText = useRef();\r\n\r\n  const handleRotateChange = event => {\r\n    setRotate(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleScaleChange = event => {\r\n    setScale(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleSkewChange = event => {\r\n    setSkew(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleTranslateXChange = event => {\r\n    setTranslateX(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleTranslateYChange = event => {\r\n    setTranslateY(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  const createValue = () => {\r\n    let value = '';\r\n    if (rotate !== '0') value += ` rotate(${rotate}deg)`;\r\n    if (scale !== '1') value += ` scale(${scale})`;\r\n    if (skew !== '0') value += ` skew(${skew}deg)`;\r\n    if (translateX !== '0' || translateY !== '0') value += ` translate(${translateX}px, ${translateY}px)`;\r\n    w.current = value;\r\n    return value;\r\n  }\r\n  const value = createValue();\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Transform options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Rotate</label>\r\n                <span className='value'>{rotate}&deg;</span>\r\n              </div>\r\n              <input type='range' min='0' max='360' defaultValue='0' className='range-slider' onChange={handleRotateChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Scale</label>\r\n                <span className='value'>{scale}</span>\r\n              </div>\r\n              <input type='range' min='0' max='2' step='0.1' defaultValue='1' className='range-slider' onChange={handleScaleChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Skew</label>\r\n                <span className='value'>{skew}&deg;</span>\r\n              </div>\r\n              <input type='range' min='-180' max='180' defaultValue='0' className='range-slider' onChange={handleSkewChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Translate X</label>\r\n                <span className='value'>{translateX}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='0' className='range-slider' onChange={handleTranslateXChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Translate Y</label>\r\n                <span className='value'>{translateY}px</span>\r\n              </div>\r\n              <input type='range' min='-200' max='200' defaultValue='0' className='range-slider' onChange={handleTranslateYChange} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <div className='test-box test-box-2' style={{ transform: value }} />\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n                transform:{value};<br />\r\n                -webkit-transform:{value};<br />\r\n                -moz-transform:{value};<br />\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transform;","import {useRef, useState} from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {hexToRgb, rgbToHex} from './color';\r\n\r\nconst ColorConverter = () => {\r\n  const [red, setRed] = useState('45');\r\n  const [green, setGreen] = useState('195');\r\n  const [blue, setBlue] = useState('106');\r\n  const [opacity, setOpacity] = useState('0.5');\r\n\r\n  const hexInput = useRef();\r\n  const rgb = useRef();\r\n  const rgba = useRef();\r\n  const hex = useRef();\r\n\r\n  const handleRedChange = event => {\r\n    setRed(event.target.value);\r\n    hexInput.current.value = rgbToHex(parseInt(event.target.value), parseInt(green), parseInt(blue));\r\n  }\r\n\r\n  const handleGreenChange = event => {\r\n    setGreen(event.target.value);\r\n    hexInput.current.value = rgbToHex(parseInt(red), parseInt(event.target.value), parseInt(blue));\r\n  }\r\n\r\n  const handleBlueChange = event => {\r\n    setBlue(event.target.value);\r\n    hexInput.current.value = rgbToHex(parseInt(red), parseInt(green), parseInt(event.target.value));\r\n  }\r\n\r\n  const handleOpacityChange = event => {\r\n    setOpacity(event.target.value);\r\n  }\r\n\r\n  const handleHexChange = event => {\r\n    const hex = event.target.value;\r\n    if (hex.length === 7 && hex[0] === '#') {\r\n      const rgb = hexToRgb(hex);\r\n      setRed(rgb.r);\r\n      setGreen(rgb.g);\r\n      setBlue(rgb.b);\r\n    }\r\n  }\r\n\r\n  const handleCopy = (event, type) => {\r\n    navigator.clipboard.writeText(type.current.innerText);\r\n    event.target.innerText = 'Copied';\r\n    setTimeout(() => {\r\n      event.target.innerText = 'Copy';\r\n    }, 1500);\r\n  }\r\n\r\n  const hexValue = rgbToHex(parseInt(red), parseInt(green), parseInt(blue));\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className=\"function-container\">\r\n        <div className=\"custom-container\">\r\n          <h3 className=\"header\">RGBA or hex options</h3>\r\n          <ul className=\"custom-list\">\r\n            <li className=\"custom-item\">\r\n              <div className=\"meta\">\r\n                <label>Red</label>\r\n                <span className=\"value\">{red}</span>\r\n              </div>\r\n              <input type='range' min='0' max='255' value={red} className='range-slider' onChange={handleRedChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Green</label>\r\n                <span className='value'>{green}</span>\r\n              </div>\r\n              <input type='range' min='0' max='255' value={green} className='range-slider' onChange={handleGreenChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Blue</label>\r\n                <span className='value'>{blue}</span>\r\n              </div>\r\n              <input type='range' min='0' max='255' value={blue} className='range-slider' onChange={handleBlueChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Opacity</label>\r\n                <span className='value'>{opacity}</span>\r\n              </div>\r\n              <input type='range' min='0' max='1' step='0.01' defaultValue='0.5' className='range-slider' onChange={handleOpacityChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Color</label>\r\n              </div>\r\n              <input type='text' className='text-in' defaultValue='#2dc36a' ref={hexInput} onChange={handleHexChange} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview preview-group'>\r\n            <div className='test-bar-1' style={{ backgroundColor: hexValue }} />\r\n            <div className='test-bar-2' style={{ backgroundColor: `rgba(${parseInt(red)}, ${parseInt(green)}, ${parseInt(blue)}, ${opacity})` }} />\r\n          </div>\r\n          <div className='output output-group'>\r\n            <div className='group'>\r\n              <p className='text' ref={rgb}>rgb({red}, {green}, {blue})</p>\r\n              <button className='copy' onClick={event => handleCopy(event, rgb)}>Copy</button>\r\n            </div>\r\n            <div className='group'>\r\n              <p className='text' ref={rgba}>rgba({red}, {green}, {blue}, {opacity})</p>\r\n              <button className='copy' onClick={event => handleCopy(event, rgba)}>Copy</button>\r\n            </div>\r\n            <div className='group'>\r\n              <p className='text' ref={hex}>{hexValue}</p>\r\n              <button className='copy' onClick={event => handleCopy(event, hex)}>Copy</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorConverter;","import {useRef, useState} from 'react';\r\nimport Navbar from './Navbar';\r\nimport {hexToRgb, rgbToHex} from './color';\r\nimport '../styles/general.scss';\r\n\r\nconst MultipleColumns = () => {\r\n  const [count, setCount] = useState('1');\r\n  const [gap, setGap] = useState('15');\r\n  const [ruleStyle, setRuleStyle] = useState('solid');\r\n  const [ruleWidth, setRuleWidth] = useState('2');\r\n  const [ruleColor, setRuleColor] = useState({r: 0, g: 0, b: 0});\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const ruleColorText = useRef();\r\n  const outputText = useRef();\r\n\r\n  const listStyles = ['solid', 'dotted', 'dashed', 'double', 'groove', 'ridge', 'inset', 'outset', 'none', 'hidden'];\r\n\r\n  const handleCountChange = event => {\r\n    setCount(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleGapChange = event => {\r\n    setGap(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleRuleStyleChange = event => {\r\n    setRuleStyle(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleRuleWidthChange = event => {\r\n    setRuleWidth(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleRuleColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setRuleColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleRuleColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setRuleColor(rgb);\r\n    setCopied(false);\r\n    ruleColorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  const columnRuleValue = `${ruleWidth}px ${ruleStyle} ${rgbToHex(ruleColor.r, ruleColor.g, ruleColor.b)}`;\r\n\r\n  const createOutputArr = () => {\r\n    const outputArr = [];\r\n    outputArr.push(`column-count: ${count};`, <br />);\r\n    outputArr.push(`-webkit-column-count: ${count};`, <br />);\r\n    outputArr.push(`-moz-column-count: ${count};`, <br />);\r\n\r\n    if (count !== '1') {\r\n      outputArr.push(`column-gap: ${gap}px;`, <br />);\r\n      outputArr.push(`-webkit-column-gap: ${gap}px;`, <br />);\r\n      outputArr.push(`-moz-column-gap: ${gap}px;`, <br />);\r\n\r\n      outputArr.push(`column-rule: ${columnRuleValue};`, <br />);\r\n      outputArr.push(`-webkit-column-rule: ${columnRuleValue};`, <br />);\r\n      outputArr.push(`-moz-column-rule: ${columnRuleValue};`, <br />);\r\n    }\r\n    return outputArr;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Multiple columns options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Column counts</label>\r\n                <span className='value'>{count}</span>\r\n              </div>\r\n              <input type='range' min='1' max='5' defaultValue='1' className='range-slider' onChange={handleCountChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Column gaps</label>\r\n                <span className='value'>{gap}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='50' defaultValue='15' className='range-slider' onChange={handleGapChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Column rule style</label>\r\n              </div>\r\n              <select className='combobox' onChange={handleRuleStyleChange}>\r\n                {listStyles.map(style => <option>{style}</option>)}\r\n              </select>\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Column rule width</label>\r\n                <span className='value'>{ruleWidth}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='50' defaultValue='2' className='range-slider' onChange={handleRuleWidthChange} />\r\n            </li>\r\n            <li className='custom-item item-inline'>\r\n              <div className='meta'>\r\n                <label>Column rule color</label>\r\n              </div>\r\n              <div className='color-picker'>\r\n                <input type='text' className='color-text' ref={ruleColorText} defaultValue='rgb(0, 0, 0)' onChange={handleRuleColorTextChange} />\r\n                <input type='color' className='color-chooser' value={rgbToHex(ruleColor.r, ruleColor.g, ruleColor.b)} onChange={handleRuleColorChooserChange} />\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <p style={{ columnCount: count, columnGap: `${gap}px`, columnRule: columnRuleValue }}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis eleifend molestie. Cras libero elit, porta ut diam nec, eleifend sagittis sapien. Aliquam dapibus nibh et euismod posuere. Pellentesque lacinia lectus vitae leo pellentesque tempus. Fusce eget blandit sem. Nulla facilisi. Phasellus gravida sit amet urna eu imperdiet. Fusce auctor sapien sed aliquet aliquet. Aenean non velit sit amet lorem mollis interdum. Nulla sit amet justo et mi lacinia semper at et felis. Nam eget felis justo. Nunc quis elementum urna, sit amet tincidunt neque. Nullam hendrerit dignissim enim id bibendum. Nulla cursus tincidunt malesuada.\r\n            </p>\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n              {createOutputArr().map(item => item)}\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultipleColumns;","export default __webpack_public_path__ + \"static/media/landscape.6103f57d.jpg\";","import {useRef, useState} from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {hexToRgb, rgbToHex} from \"./color\";\r\nimport landscape from '../img/landscape.jpg';\r\nimport '../styles/general.scss';\r\n\r\nconst Filter = () => {\r\n  const [grayscale, setGrayscale] = useState('0');\r\n  const [sepia, setSepia] = useState('0');\r\n  const [blur, setBlur] = useState('0');\r\n  const [brightness, setBrightness] = useState('100');\r\n  const [hueRotate, setHueRotate] = useState('0');\r\n  const [saturate, setSaturate] = useState('100');\r\n  const [opacity, setOpacity] = useState('100');\r\n  const [contrast, setContrast] = useState('100');\r\n  const [invert, setInvert] = useState('0');\r\n  const [dropShadow, setDropShadow] = useState(false)\r\n  const [shadowColor, setShadowColor] = useState({r: 0, g: 0, b: 0});\r\n  const [horizontalLength, setHorizontalLength] = useState('10');\r\n  const [verticalLength, setVerticalLength] = useState('10');\r\n  const [blurRadius, setBlurRadius] = useState('5');\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const colorText = useRef();\r\n  const outputText = useRef();\r\n\r\n  const handleGrayscaleChange = event => {\r\n    setGrayscale(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleSepiaChange = event => {\r\n    setSepia(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBlurChange = event => {\r\n    setBlur(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBrightnessChange = event => {\r\n    setBrightness(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleHueRotateChange = event => {\r\n    setHueRotate(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleSaturateChange = event => {\r\n    setSaturate(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleOpacityChange = event => {\r\n    setOpacity(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleContrastChange = event => {\r\n    setContrast(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleInvertChange = event => {\r\n    setInvert(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleDropShadowChange = event => {\r\n    setDropShadow(event.target.checked);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleColorTextChange = event => {\r\n    const rgb = event.target.value.match(/[0-9]+/g);\r\n    if (rgb !== null && rgb.length === 3) {\r\n      setShadowColor({r: parseInt(rgb[0]), g: parseInt(rgb[1]), b: parseInt(rgb[2])});\r\n      setCopied(false);\r\n    }\r\n  }\r\n\r\n  const handleColorChooserChange = event => {\r\n    const rgb = hexToRgb(event.target.value);\r\n    setShadowColor(rgb);\r\n    setCopied(false);\r\n    colorText.current.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\r\n  }\r\n\r\n  const handleHorizontalLengthChange = event => {\r\n    setHorizontalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleVerticalLengthChange = event => {\r\n    setVerticalLength(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleBlurRadiusChange = event => {\r\n    setBlurRadius(event.target.value);\r\n    setCopied(false);\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(outputText.current.innerText);\r\n    setCopied(true);\r\n  }\r\n\r\n  const createValue = () => {\r\n    let value = '';\r\n    if (grayscale !== '0') value += ` grayscale(${grayscale}%)`;\r\n    if (sepia !== '0') value += ` sepia(${sepia}%)`;\r\n    if (blur !== '0') value += ` blur(${blur}px)`;\r\n    if (brightness !== '100') value += ` brightness(${brightness}%)`;\r\n    if (hueRotate !== '0') value += ` hue-rotate(${hueRotate}deg)`;\r\n    if (saturate !== '100') value += ` saturate(${saturate}%)`;\r\n    if (opacity !== '100') value += ` opacity(${opacity}%)`;\r\n    if (contrast !== '100') value += ` contrast(${contrast}%)`;\r\n    if (invert !== '0') value += ` invert(${invert}%)`;\r\n    if (dropShadow) value += ` drop-shadow(${horizontalLength}px ${verticalLength}px ${blurRadius}px rgb(${shadowColor.r}, ${shadowColor.g}, ${shadowColor.b}))`;\r\n    return value;\r\n  }\r\n  const value = createValue();\r\n\r\n  return (\r\n    <>\r\n      <Navbar classObject={{parent: 'menu', children: 'option'}} />\r\n      <div className='function-container'>\r\n        <div className='custom-container'>\r\n          <h3 className='header'>Filter options</h3>\r\n          <ul className='custom-list'>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Grayscale</label>\r\n                <span className='value'>{grayscale}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='100' defaultValue='0' className='range-slider' onChange={handleGrayscaleChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Sepia</label>\r\n                <span className='value'>{sepia}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='100' defaultValue='0' className='range-slider' onChange={handleSepiaChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Blur</label>\r\n                <span className='value'>{blur}px</span>\r\n              </div>\r\n              <input type='range' min='0' max='10' defaultValue='0' className='range-slider' onChange={handleBlurChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Brightness</label>\r\n                <span className='value'>{brightness}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='200' defaultValue='100' className='range-slider' onChange={handleBrightnessChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Hue rotate</label>\r\n                <span className='value'>{hueRotate}&deg;</span>\r\n              </div>\r\n              <input type='range' min='0' max='360' defaultValue='0' className='range-slider' onChange={handleHueRotateChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Saturate</label>\r\n                <span className='value'>{saturate}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='1000' defaultValue='100' className='range-slider' onChange={handleSaturateChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Opacity</label>\r\n                <span className='value'>{opacity}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='100' defaultValue='100' className='range-slider' onChange={handleOpacityChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Contrast</label>\r\n                <span className='value'>{contrast}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='1000' defaultValue='100' className='range-slider' onChange={handleContrastChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <div className='meta'>\r\n                <label>Invert</label>\r\n                <span className='value'>{invert}%</span>\r\n              </div>\r\n              <input type='range' min='0' max='100' defaultValue='0' className='range-slider' onChange={handleInvertChange} />\r\n            </li>\r\n            <li className='custom-item'>\r\n              <h4 className='special-header'>Drop shadow</h4>\r\n              <ul className='special-container'>\r\n                <li className='special-item item-inline'>\r\n                  <div className='meta'>\r\n                    <label>Include drop shadow</label>\r\n                  </div>\r\n                  <label className='switch-slider'>\r\n                    <input type='checkbox' onChange={handleDropShadowChange} className='checkbox'/>\r\n                    <span className='slider' />\r\n                  </label>\r\n                </li>\r\n                <li className='special-item item-inline'>\r\n                  <div className='meta'>\r\n                    <label>Shadow color</label>\r\n                  </div>\r\n                  <div className='color-picker'>\r\n                    <input type='text' className='color-text' ref={colorText} defaultValue='rgb(0, 0, 0)' onChange={handleColorTextChange} />\r\n                    <input type='color' className='color-chooser' value={rgbToHex(shadowColor.r, shadowColor.g, shadowColor.b)} onChange={handleColorChooserChange} />\r\n                  </div>\r\n                </li>\r\n                <li className='special-item'>\r\n                  <div className='meta'>\r\n                    <label>Horizontal shadow length</label>\r\n                    <span className='value'>{horizontalLength}px</span>\r\n                  </div>\r\n                  <input type='range' min='-200' max='200' defaultValue='10' className='range-slider' onChange={handleHorizontalLengthChange} />\r\n                </li>\r\n                <li className='special-item'>\r\n                  <div className='meta'>\r\n                    <label>Vertical shadow length</label>\r\n                    <span className='value'>{verticalLength}px</span>\r\n                  </div>\r\n                  <input type='range' min='-200' max='200' defaultValue='10' className='range-slider' onChange={handleVerticalLengthChange} />\r\n                </li>\r\n                <li className='special-item'>\r\n                  <div className='meta'>\r\n                    <label>Blur radius</label>\r\n                    <span className='value'>{blurRadius}px</span>\r\n                  </div>\r\n                  <input type='range' min='0' max='400' defaultValue='5' className='range-slider' onChange={handleBlurRadiusChange} />\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='result-container'>\r\n          <div className='preview'>\r\n            <img src={landscape} width='400' alt='Landscape' style={{ filter: value }} />\r\n          </div>\r\n          <div className='output'>\r\n            <p className='text' ref={outputText}>\r\n              filter:{value};<br />\r\n              -webkit-filter:{value};<br />\r\n              -moz-filter:{value};<br />\r\n            </p>\r\n            <button className='copy' onClick={handleCopyClick}>{(copied) ? 'Copied' : 'Copy'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Filter;","import {Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport BoxShadow from './components/BoxShadow';\nimport TextShadow from './components/TextShadow';\nimport Gradient from './components/Gradient';\nimport Cursor from './components/Cursor';\nimport BorderRadius from './components/BorderRadius';\nimport Transform from './components/Transform';\nimport ColorConverter from './components/ColorConverter';\nimport MultipleColumns from './components/MultipleColumns';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <h1>CSs Generator Tool</h1>\n      <Switch>\n        <Route path='/' component={Home} exact />\n        <Route path='/box-shadow' component={BoxShadow} />\n        <Route path='/text-shadow' component={TextShadow} />\n        <Route path='/gradient' component={Gradient} />\n        <Route path='/cursor' component={Cursor} />\n        <Route path='/border-radius' component={BorderRadius} />\n        <Route path='/transform' component={Transform} />\n        <Route path='/color-converter' component={ColorConverter} />\n        <Route path='/multiple-columns' component={MultipleColumns} />\n        <Route path='/filter' component={Filter} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}